import axios from 'axios';

console.log(localStorage)
const api = axios.create({
  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Base URL
  baseURL: 'http://localhost:8080', 
  timeout: 50000, // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Timeout
});

// üí° Interceptor: ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà Request ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ
api.interceptors.request.use(
  (config) => {
    // üí° ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏î‡∏∂‡∏á Token ‡∏à‡∏≤‡∏Å localStorage ‡πÅ‡∏ó‡∏ô location.state
    const token = localStorage.getItem('token'); 
    console.log("token",token)
    
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ Token ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Local Storage ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡∏ö Header Authorization
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    if (config.method === 'get') {
      delete config.headers['Content-Type'];
    }
    return config;
  },
  (error) => {
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á Request
    return Promise.reject(error);
  }
);

// üí° Interceptor ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Response: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error 401/403 (‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß)
api.interceptors.response.use(
    (response) => response,
    (error) => {
        if (error.response && error.response.status === 401) {
            console.error("Authentication failed or token expired. Redirecting...");
            // ... (‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Redirect)
        }
        return Promise.reject(error);
    }
);


export default api; // ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å Instance ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß