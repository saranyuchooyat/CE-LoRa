import { useState, useEffect } from "react";
import { useLocation } from "react-router-dom";
import api from "../../components/API";
import Cardno2 from "../../components/Cardno2";
import Cardno3 from "../../components/Cardno3";
import CardFull from "../../components/Cardno5";
import CardServerData from "../../components/CardServerData";



function SystemOverviewDashboard(){

    const location = useLocation();
    const [userData, setUserData] = useState([]);
    const [elderlyData, setElderlyData] = useState([]);
    const [deviceData, setDeviceyData] = useState([]);
    const [zoneData, setZoneData] = useState([]);
    const [serverData, setServerData] = useState([]);
    const [alertData, setAlertData] = useState([]);
    const [loading, setLoading] = useState(true);

    //‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô
    const fetchSystemData = async () => {

        // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Token ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ô LocalStorage ‡πÅ‡∏•‡πâ‡∏ß
        const tokenInStorage = localStorage.getItem('token');
        const tokenInState = location.state?.token;

        if (!tokenInStorage && !tokenInState) {
            console.error("No authentication context found. Please log in.");
            setLoading(false);
            return;
        }

        // 2. ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ Token ‡πÉ‡∏ô Storage ‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏≤‡∏à‡∏≤‡∏Å state ‡∏´‡∏£‡∏∑‡∏≠ Refresh) ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        try {
                setLoading(true);
                const userPromise = api.get('/users');
                const elderPromise = api.get('/elders');
                const devicePromise = api.get('/devices');
                const zonePromise = api.get('/zones');
                const serversPromise = api.get('/system/health/servers');
                const alertPromise = api.get('/system/alerts');

                const [userRes, elderRes, deviceRes, zoneRes, serverRes, alertRes] = await Promise.all([
                    userPromise, 
                    elderPromise,
                    devicePromise,
                    zonePromise,
                    serversPromise,
                    alertPromise 
                ]);

                setUserData(userRes.data);
                setElderlyData(elderRes.data);
                setDeviceyData(deviceRes.data);
                setZoneData(zoneRes.data);
                setServerData(serverRes.data);
                setAlertData(alertRes.data);
                

            } catch (error) {
                console.error("Error fetching user data:", error);
            } finally {
                setLoading(false);
            }
    };

    useEffect(() => {
        const tokenInStorage = localStorage.getItem('token');

        // ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Token ‡∏à‡∏≤‡∏Å State ‡∏•‡∏á Storage ‡∏ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ Login
        if (location.state?.token && location.state.token !== tokenInStorage) {
             localStorage.setItem('token', location.state.token);
             // üí° ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å fetchSystemData ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
             // ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏´‡πâ Component ‡πÇ‡∏´‡∏•‡∏î‡∏ã‡πâ‡∏≥‡∏î‡πâ‡∏ß‡∏¢ dependency (location.state) ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å
        }

        // üí° ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠ Component ‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏•‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Token
        fetchSystemData(); 
        
    }, [location.state]);
    //‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô


    // console.log("userData: ",userData)
    // console.log("elderlyData: ",elderlyData)
    // console.log("deviceData: ",deviceData)
    // console.log("zoneData: ",zoneData)
    // console.log("serverData: ",serverData)
    // console.log("alertData: ",alertData)

    const SystemData = 
    [
        {value: zoneData.length ,name:"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Zone ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"},
        {value: (userData.length),name:"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"},
        {value: elderlyData.length ,name:"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô"},
        {value: deviceData.length,name:"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô"},
    ]

    if (loading) {
        return <div className="mx-5 mt-10 text-center text-xl">Loading Dashboard...</div>;
    }

    return(
        <>
            <div className="mx-5">
                <Cardno2 data={SystemData}/>
                <Cardno3/>
                <CardServerData data={serverData}/>
                <CardFull data={alertData}/>
            </div>
        </>
    );
}

export default SystemOverviewDashboard;